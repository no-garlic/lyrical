# ==================================================================================================================
# System Prompt
# ==================================================================================================================
"system_prompt": |-
  You are a helpful assistant that returns information in NDJSON (newline delimitered JSON) format.
  You are an expert songwriter, with 30 years of experience creating catchy song names.
  Always respond with valid NDJSON that can be parsed by json.loads().
  Do not include any explanations or text outside of the NDJSON structure.
  For example, some NDJSON might looks like this:
  {"key": "val"}
  {"key": ["val1": "val2"]}
  {"key": {"sub-key1": "val1", "sub-key2", "val2"}}
  ...
  As you can see, there is a complete and valid JSON structure on each individual line.
  NEVER return just plain text asking me a question or telling me you dont know what to do, in that case return the NDJSON structure:
  {"error": "the error message"}


# ==================================================================================================================
# Song Names
# ==================================================================================================================
"song_names" : |-
  Generate a list of {{ count }} song names for catchy pop songs.
    I want a variety of different length song names, each between {{ min_words }} and {{ max_words }} words in length.

  {% if include_themes %}The song names MUST use or more of the themes:
  [{{ include_themes }}]{% endif %}

  {% if exclude_themes %}The song names MUST NOT use any of the themes:
  [{{ exclude_themes }}]{% endif %}

  {% if include_words %}The song names MUST include one or more of these words:
  [{{ include_words }}]{% endif %}

  {% if exclude_words %}The song names should not include any of these words:
  [{{ exclude_words }}]{% endif %}

  {% if exclude_song_names %}The song names MUST BE UNIQUE, and MUST NOT appear in this list:
  [{% for line in exclude_song_names %}{{line}}{% endfor %}]
  {% endif %}

  {% if starts_with %}The song names MUST start with the word(s): '{{ starts_with }}'{% endif %}
  {% if ends_with %}The song names MUST end with the word(s): '{{ ends_with }}'{% endif %}

  {% if custom_request %}Also follow these instructions: {{custom_request}}.{% endif %}

  Use Title Case for song names, where every word starts with an uppercase letter.

  Use the following NDJSON format, with one name per row:
    {"name": "From The Ashes"}
    {"name": "How To Shine"}
    ...


"song_names.system_prompt": |-
  You are a helpful assistant that returns information in NDJSON (newline delimitered JSON) format.
  You are an expert songwriter, with 30 years of experience creating catchy song names.
  Always respond with valid NDJSON that can be parsed by json.loads().
  Do not include any explanations or text outside of the NDJSON structure.
  For example, some NDJSON might looks like this:
  {"key": "val"}
  {"key": ["val1": "val2"]}
  {"key": {"sub-key1": "val1", "sub-key2", "val2"}}
  As you can see, there is a complete and valid JSON structure on each individual line.


# ==================================================================================================================
# Song Styles
# ==================================================================================================================
"song_styles": |-
  You are tasked with creating some song description options for an upbeat catchy pop song. The song should embody the essence of modern 
  pop music, focusing on themes that resonate with a wide audience, such as inspiration, empowerment, joy, or self-discovery. The song should have 
  a balance of emotional depth and playful energy to ensure it captivates listeners.

  The name of the song is "{{ song_name }}".

  {% if include_themes %}These are the styles and topics to focus on: {{ include_themes }}{% endif %}
  {% if exclude_themes %}These are the styles and topics to avoid: {{ exclude_themes }}{% endif %}

  You will create: {% if theme %}(3 themes, {% endif %}{% if narrative %}3 narratives, {% endif %}{% if mood %}3 moods{% endif %}) for me to choose from.

  {% if theme %}- A theme is a description of what the song is about to establish the context of the song.{% endif %}
  {% if narrative %}- A narrative contains 2 sentences, the first sentence describes the story that the song tells, the second sentence adds more detail to the first 
    sentence, continuing to expand on the narrative of the song.{% endif %}
  {% if mood %}- a mood describes the mood and emotion of the song, and what the listener should be feeling.{% endif %}

  These descriptions should be focussed on "myself", not on other people, so don't consider situations such as love, friends, or other people. Use the
  first person perspective.

  {% if custom_request %}Also follow these instructions: 
  {{custom_request}} {% endif %}

  Each sentence should be well written english, and be descriptive.
  Long sentences are encouraged.

  Use the following NDJSON format, with EXACTLY ONE theme, narrative, or mood per row:
    {% if theme %}{"theme": "<mood sentence...>"}
    {"theme": "<mood sentence...>"}
    {"theme": "<mood sentence...>"}{% endif %}
    {% if narrative %}{"narrative": "<narrative sentence 1...>. <narrative sentence 2...>."}
    {"narrative": "<narrative sentence 1...>. <narrative sentence 2...>."}
    {"narrative": "<narrative sentence 1...>. <narrative sentence 2...>."}{% endif %}
    {% if mood %}{"mood": "<mood sentence...>"}
    {"mood": "<mood sentence...>"}
    {"mood": "<mood sentence...>"}{% endif %}
    ...


# ==================================================================================================================
# Song Lyrics (Full)
# ==================================================================================================================
"song_lyrics": |-
  You are tasked with creating an upbeat catchy pop song. The song should embody the essence of modern pop music, focusing 
  on themes that resonate with a wide audience, such as inspiration, empowerment, joy, or self-discovery. The song should have 
  a balance of emotional depth and playful energy to ensure it captivates listeners.

  The name of the song is "{{ song_name }}".

  {% if include_themes %}These are the styles and topics to focus on: {{ include_themes }}{% endif %}
  {% if exclude_themes %}These are the styles and topics to avoid: {{ exclude_themes }}{% endif %}

  {% if theme %}The theme of the song is: {{theme}}{% endif %}
  {% if narrative %}The narrative of the song is: {{narrative}}{% endif %}
  {% if mood %}The mood of the song is: {{mood}}{% endif %}

  {% if custom_request %}Also follow these instructions: 
  {{custom_request}} {% endif %}

  {% if vocalisation_level %}The song should have a {{ vocalisation_level }} amount of vocalisation.{% endif %}
  Lead singer vocalisation is written as a part of the lyrics, eg: "Whoa, oh, the sunshine is here" or "take me higher, ooh-ah".
  Backing singer vocalisation is written in brackets, eg: "The world is mine! (oh-oh-oh)".
  {% if vocalisation_terms %}Use only the following vocalisation terms: {{ vocalisation_terms }}.{% endif %}

  Each line of lyrics should have approximately {{ syllables }} syllables.

  Generate the following song sections:
  {% if verse_count %}- {{ verse_count }} verses, each with {{ verse_lines }} lines of lyrics
  {% endif %}{% if pre_chorus_lines %}- a pre-chorus with {{ pre_chorus_lines }} lines of lyrics
  {% endif %}{% if chorus_lines %}- a chorus with {{ chorus_lines }} lines of lyrics
  {% endif %}{% if bridge_lines %}- a bridge with {{ bridge_lines }} lines of lyrics
  {% endif %}{% if intro_lines %}- an intro with {{ intro_lines }} lines of lyrics
  {% endif %}{% if outro_lines %}- an outro with {{ outro_lines }} lines of lyrics
  {% endif %}{% if vocalisation_lines %}- a vocalisation section with {{ vocalisation_lines }} lines of lyrics{% endif %}

  Use the following NDJSON format, with EXACTLY ONE song section per row, and each separate line of lyrics for that section as an element in a list:
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>", "<lyrics line 5>", "<lyrics line 6>"]}
    ...

  For example:
    {"chorus": ["Oh, I will survive!!!,", "You know i'm alive (oh-oh-oh),", "Oh, I will survive!!!,", "Whoa, It's time to thrive"]}
    {"verse1": ["From the ashes I am reborn,", "Into the light of a new dawn.", "Ooh-ooh-ooh-ooh-ooh, Ahh-ah,", "Ooh, In the end we face the storm."]}
    ...


# ==================================================================================================================
# Song Lyrics (1 Section)
# ==================================================================================================================
"song_lyrics_section": |-
  You are tasked with creating some alternative song sections for the song you have generated.
  Please refer to our chat history regarding all details of the song, including the number of lines per section, the number of syllables 
  per line, and all other specific details that I previously provided.

  Your new alternatives must not include the same lyrics as previously generated lyrics for this {{section_type}}.
  Ensure that the new lyrics that you generate still rhyme with the existing lyrics, and follow the rhythm and theme of the song.
  At all times, pairs of lyrics lines must rhyme (that is lines 1&2 must rhyme together, lines 3&4 must rhyme together, and so on...).
  
  {% if custom_request %}Also follow these instructions: 
  {{custom_request}} {% endif %}

  Generate {{count}} new song sections for the {{section_type}}:

  Use the same NDJSON format as before, with EXACTLY ONE song section per row, and each separate line of lyrics for that section as an element in a list:
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>", "<lyrics line 5>", "<lyrics line 6>"]}
    ...

  For example:
    {"{{section_type}}": ["Oh, I will survive!!!,", "You know i'm alive (oh-oh-oh),", "Oh, I will survive!!!,", "Whoa, It's time to thrive"]}
    {"{{section_type}}": ["From the ashes I am reborn,", "Into the light of a new dawn.", "Ooh-ooh-ooh-ooh-ooh, Ahh-ah,", "Ooh, In the end we face the storm."]}
    ...


# ==================================================================================================================
# Song Lyrics (Markup Section)
# ==================================================================================================================
"song_lyrics_section": |-
  You are tasked with creating some alternatives song sections for the song you have generated.
  Please refer to our chat history regarding all details of the song, including the number of lines per section, the number of syllables 
  per line, and all other specific details that I previously provided.

  IMPORTANT!!! You must follow these instructions: 
  Your task is to create alternatives to the following {{section_type}}:
  {{markup_lyrics}}

  Your new alternatives must include the exact words and structure of the above {{section_type}}, except:
  - replace every <<line>> token you see with a new lyrics line, every time you see this token you must replace the line with a new line that has never been seen in our chat history for this {{section_type}}.
  - replace any <<words>> token you see with new lyrics words, every time you see this token you must replace the words with new words that have never been seen in our chat history for this {{section_type}}.
  - replace any <<word> token you see with a new lyrics word, every time you see this token you must replace the word with a new word that has never been seen in our chat history for this {{section_type}}.
  All other words must match the above {{section_type}}.

  Ensure that the new lyrics that you add rhyme with the existing lyrics.
  At all times, pairs of lyrics lines must rhyme (that is lines 1&2, lines 3&4, and so on...).

  {% if custom_request %}Also follow these instructions: 
  {{custom_request}} {% endif %}

  Generate {{count}} new song sections for the {{section_type}}:

  Use the same NDJSON format as before, with EXACTLY ONE song section per row, and each separate line of lyrics for that section as an element in a list:
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>"]}
    {"<section>": ["<lyrics line 1>", "<lyrics line 2>", "<lyrics line 3>", "<lyrics line 4>", "<lyrics line 5>", "<lyrics line 6>"]}
    ...

  For example:
    {"{{section_type}}": ["Oh, I will survive!!!,", "You know i'm alive (oh-oh-oh),", "Oh, I will survive!!!,", "Whoa, It's time to thrive"]}
    {"{{section_type}}": ["From the ashes I am reborn,", "Into the light of a new dawn.", "Ooh-ooh-ooh-ooh-ooh, Ahh-ah,", "Ooh, In the end we face the storm."]}
    ...


"song_words": |-
  You are tasked with returning {{count}} words that rhyme with {{rhyme_with}}.

  {% if custom_request %}Also follow these instructions: 
  {{custom_request}} {% endif %}
 
  DO NOT return any duplicate words.
  {% if exclude_list %}

  DO NOT return any words in this list:
  {{exclude_list}}{% endif %}

  ONLY USE following NDJSON format, returning EXACTLY ONE line of valid NDJSON per word:
    {"index": "word"}
    {"index": "word"}
    ...

  For example:
    {"1": "alive"}
    {"2": "thrive"}
    {"3": "hive"}
    ...
  

"testing.song_words.follow_up": |-
  Generate an additional {{count}} words that rhyme with "{{rhyme_with}}".

  {% if custom_request %}Also follow these instructions:
  {{custom_request}} {% endif %}

  These words MUST BE UNIQUE, NEW WORDS, that you have not previously generated.
