# Generated by Django 5.2 on 2025-04-15 00:03

from django.db import migrations
import os


"""
for model in litellm.utils.get_valid_models():
    print(model)
"""


def add_data(apps, schema_editor):
    llm_provider = apps.get_model("lyrical", "LLMProvider")
    llm = apps.get_model("lyrical", "LLM")
    user = apps.get_model("lyrical", "User")
    user_api_key = apps.get_model("lyrical", "UserAPIKey")

    llm_provider.objects.create(display_name="OpenAI", internal_name="openai")
    llm_provider.objects.create(display_name="Anthropic", internal_name="anthropic")
    llm_provider.objects.create(display_name="Google", internal_name="gemini")
    llm_provider.objects.create(display_name="Ollama", internal_name="ollama")

    llm.objects.create(display_name="GPT:4.1", internal_name="gpt-4.1", provider=llm_provider.objects.get(internal_name="openai"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="GPT:4o", internal_name="gpt-4o", provider=llm_provider.objects.get(internal_name="openai"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="GPT:4o-mini", internal_name="gpt-4o-mini", provider=llm_provider.objects.get(internal_name="openai"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Claude:3.5", internal_name="claude-3-5-haiku-latest", provider=llm_provider.objects.get(internal_name="anthropic"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Claude:3.7", internal_name="claude-3-7-sonnet-latest", provider=llm_provider.objects.get(internal_name="anthropic"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Gemini-Flash:2.0", internal_name="gemini-2.0-flash", provider=llm_provider.objects.get(internal_name="gemini"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Gemini-Flash:2.5", internal_name="gemini-2.5-flash", provider=llm_provider.objects.get(internal_name="gemini"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Gemma3:12b", internal_name="gemma3:12b", provider=llm_provider.objects.get(internal_name="ollama"), temperature=0.2, max_tokens=1000, json_response_format=True)
    llm.objects.create(display_name="Gemma3:4b", internal_name="gemma3:4b", provider=llm_provider.objects.get(internal_name="ollama"), temperature=0.2, max_tokens=1000, json_response_format=True)

    open_ai_api_key = os.getenv("OPENAI_API_KEY")
    anthropic_api_key = os.getenv("ANTHROPIC_API_KEY")
    google_api_key = os.getenv("GEMINI_API_KEY")

    user = user.objects.get(username="mpetrou")
    user.default_model = llm.objects.get(internal_name="gemma3:4b")

    user_api_key.objects.create(user=user, provider=llm_provider.objects.get(internal_name="openai"),api_key=open_ai_api_key)
    user_api_key.objects.create(user=user, provider=llm_provider.objects.get(internal_name="anthropic"), api_key=anthropic_api_key)
    user_api_key.objects.create(user=user, provider=llm_provider.objects.get(internal_name="gemini"), api_key=google_api_key)


def remove_data(apps, schema_editor):
    apps.get_model("lyrical", "UserAPIKey").objects.all().delete()
    apps.get_model("lyrical", "User").objects.all().delete()
    apps.get_model("lyrical", "LLM").objects.all().delete()
    apps.get_model("lyrical", "LLMProvider").objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("lyrical", "0003_add_users"),
    ]

    operations = [
        migrations.RunPython(add_data, reverse_code=remove_data)
    ]
