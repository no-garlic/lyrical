# Generated by Django 5.2 on 2025-04-15 00:03

from django.db import migrations
from django.contrib.auth.hashers import make_password
import os


def add_data(apps, schema_editor):
    llm = apps.get_model("lyrical", "LLM")
    llm_provider = apps.get_model("lyrical", "LLMProvider")
    users = apps.get_model('lyrical', 'User')
    user_api_key = apps.get_model("lyrical", "UserAPIKey")
    song_structure_template = apps.get_model("lyrical", "SongStructureTemplate")

    # Get the default LLM model
    default_llm_model = llm.objects.get(internal_name="gemini-2.0-flash")

    # Create the Users
    users.objects.create(username='admin', password=make_password('admin'), email='admin@example.com', first_name='Admin', last_name='Admin', is_superuser=True, is_staff=True,
                         llm_max_tokens=2000, llm_temperature=0.5, llm_model=default_llm_model, llm_model_summarise=default_llm_model)
    
    mpetrou = users.objects.create(
        username='mpetrou', 
        password=make_password('mike'), 
        email='mike@example.com', 
        first_name='Michael', 
        last_name='Petrou', 
        is_superuser=True, 
        is_staff=True,
        llm_max_tokens=2000,
        llm_temperature=0.2, 
        llm_model=default_llm_model,
        llm_model_summarise=default_llm_model,

        song_name_theme_inc='happy, positive, inspirational, motivational, an accomplishment, success from difficult odds, or about winning',
        song_name_theme_exc='futuristic, electric, cyber, technology, hate, anger, sadness, pain, loss, or anything negative',
        song_name_words_inc='',
        song_name_words_exc='',
        song_name_starts_with='',
        song_name_ends_with='',
        song_name_length_min=1,
        song_name_length_max=4,
        song_name_gen_count=5,
    )

    # Create the default song structure templates
    for i in range(8):
        song_structure_template.objects.create(name=f'Template {i+1}', user=mpetrou)

    # Get the LLM API keys from environment variables
    open_ai_api_key = os.getenv("OPENAI_API_KEY")
    anthropic_api_key = os.getenv("ANTHROPIC_API_KEY")
    google_api_key = os.getenv("GEMINI_API_KEY")

    # Create the LLM API keys    
    user_api_key.objects.create(user=mpetrou, provider=llm_provider.objects.get(internal_name="openai"),api_key=open_ai_api_key)
    user_api_key.objects.create(user=mpetrou, provider=llm_provider.objects.get(internal_name="anthropic"), api_key=anthropic_api_key)
    user_api_key.objects.create(user=mpetrou, provider=llm_provider.objects.get(internal_name="gemini"), api_key=google_api_key)


def remove_data(apps, schema_editor):
    apps.get_model("lyrical", "UserAPIKey").objects.all().delete()
    apps.get_model("lyrical", "User").objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("lyrical", "0003_add_llms"),
    ]

    operations = [
        migrations.RunPython(add_data, reverse_code=remove_data)
    ]
